




++++call firstfunc++++
with no overflow parameters
let's print firstfunc input vars
var1: a1
var2: 2
var3: 3
var4: 4
varargs: ()
kwargs: {}


with overflow parameters
let's print firstfunc input vars
var1: a1
var2: a2
var3: a3
var4: a4
varargs: ('a5', 'a6')
kwargs: {'other': 'o1', 'last': 'l1'}


++++call secondfunc++++
let's print secondfunc input vars
var1: b1
var2: b2
var3: 3
var4: 4

let's print secondfunc1 input vars
var1: b1
var2: 2
var3: 3
var4: 4


++++call thirdfunc++++
let's print thirdfunc input vars
var1: c1
var2: c2
var3: 3
var4: 4
====There would be a caller====
the call content for 'thirdfunc'
call_var1: a call var came here
[call another function here]
let's print secondfunc input vars
var1: b1
var2: b2
var3: 3
var4: 4



++++call fourthfunc++++
let's print fourthfunc input vars
var1: d1
var2: 2
var3: 3
var4: 4
====call another function====
let's print secondfunc input vars
var1: b1
var2: b2
var3: 3
var4: 4




++++macro's properties++++
firstfunc --name-->  firstfunc
firstfunc --arguments-->  ('var1', 'var2', 'var3', 'var4')
firstfunc --defaults-->  (2, 3, 4)
firstfunc --catch_varargs-->  True
firstfunc --catch_kwargs-->  True
firstfunc --caller-->  False
